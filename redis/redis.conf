
#   |指定包含其它的配置文件，可以在同一主机上多个Redis实例之间使用同一份配置文件，而同时各个实例又拥有自己的
#   |特定配置文件
#include /path/to/local.conf

#   |是否允许守护进程方式启动，默认不启动
daemonize yes

#   |创建database的数量，默认为0 表示不限
database 16

#   |刷新快照到硬盘中，必须满足两者要求才会触发，即900秒之后至少1个关键字发生变化。
save 900 1
save 300 10
save 60 10000

#   |当redis以守护进程方式运行，默认会把pid写入/var/run/redis.pid，可以通过pidfile指定
pidfile /var/run/redis.pid

#   |指定监听端口，默认：6379
prot 6379

#   |绑定的主机地址
bind 127.0.0.1

#   |当客户端闲置多长时间后关闭连接，如果指定为0，表示关闭该功能
timeout 300

#   |指定日志级别，redis总共支持四个级别：debug、verbose、notice、warning，默认为verbose
loglevel verbose

#   |后台存储错误停止写。
stop-writes-on-bgsave-error yes

#   |使用LZF压缩rdb文件。
rdbcompression yes

#   |存储和加载rdb文件时校验。
rdbchecksum yes

#   |设置rdb文件名。
dbfilename dump.rdb

#   |#设置工作目录，rdb文件会写入该目录。
dir /var/.data/db/redis

#   |设置本机为slav从服务器时，设置master服务器ip与port，当Redis启动时，它会自动从master进行数据同步
#slaveof 11.11.11.6 6561

#   |当master服务设置了密码保护时，slav连接master的密码
#masterauth <master-password>

#   |设置redis连接密码，默认关闭
requirepass foobared

#   |设置同一时间最大客户端连接数，默认无限制，redis可以同时打开的客户端连接数为redis进程可以打开的最大
#   |文件描述符数，如果设置maxclients 0，表示不作限制。当客户端连接数到过限制时，redis会关闭新连接并向
#   |客户端返回max number of clients reached错误信息
maxclients 128

#   |指定最大内存限制，Redis在启动时会把数据加载到内存中，达到最大内存后，Redis会先尝试清除已到期或即将
#   |到期的Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。
#   |Redis新的vm机制，会把Key存放内存，Value会存放在swap区
maxmomory 100MB

#   |指定是否在每次更新操作后进行日志记录，Redis在默认情况下是异步的把数据写入磁盘，如果不开启，可能会在
#   |断电时导致一段时间内的数据丢失。因为 redis本身同步数据文件是按上面save条件来同步的，所以有的数据会
#   |在一段时间内只存在于内存中。默认为no
appendonly no

#   |指定更新日志文件名，默认为appendonly.aof
appendonlyname appendonly.aof
#   |指定更新日志条件，共有3个可选值：
#   |no:表示等操作系统进行数据缓存同步到磁盘（快）
#   |always：表示每次更新操作后手动调用fsync()将数据写到磁盘（慢，安全）
#   |everysec：表示每秒同步一次（折衷，默认值）
appendfsync everysec

#   |指定是否启动虚拟内存机制，默认值为no，简单的介绍一下，VM机制将数据分页存放，由redis将访问量较少的页
#   |即冷数据swap到磁盘上，访问多的页面由磁盘自动换出到内存中
vm-enabled no

#   |虚拟内存文件路径，默认值为/tmp/redis.swap，不可多个redis实例共享
vm-swap-file /tmp/redis.swap

#   |将所有大于vm-max-memory的数据存入虚拟内存，无论vm-max-memory设置多小，所有索引数据都是内存存储的
#   |(redis的索引数据就是keys),也就是说，当vm-max-memory设置为0时，其实是所有value都存在于磁盘。默认值为0
vm-max-memory 0

#   |设置swap文件中的page数据，由于页表(一种表示页面空闲或使用的bitmap)是存放在内存中的，在磁盘上每8个pages
#   |将消耗1byte的内存。134217728byte=16MB
vm-pages 134217728

#   |设置访问swap文件的线程数，最好不要超过机器的核数，如果设置为0，那么所有对swap文件的操作都是串行的，可能
#   |会造成比较长时间的延迟。默认值为4
vm-max-threads 2

#   |设置在向客户端应答时，是否把较小的包合并为一个包发送，默认为开启
glueoutputbuf yes

#   |指定在超过一定的数量或者最大的元素超过某一临界值时，采用一种特殊的哈希算法
hash-max-zipmap-entries 64
hash-max-zipmap-value 512

#   |指定是否激活重置哈希，默认为开启
activerehashing yes
